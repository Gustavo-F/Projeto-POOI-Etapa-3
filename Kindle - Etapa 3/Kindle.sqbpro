<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/Gustavo/Google Drive/Workspace Eclipse/Kindle - Etapa 3/Kindle.sqlite" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="1317"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,13:mainpessoa_fisica"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="editora" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="73"/><column index="2" value="89"/><column index="3" value="40"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="escritor" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="73"/><column index="2" value="78"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="pessoa" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="73"/><column index="2" value="147"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="pessoa_fisica" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="73"/><column index="2" value="58"/><column index="3" value="80"/><column index="4" value="84"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="usuario" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="73"/><column index="2" value="73"/><column index="3" value="49"/><column index="4" value="74"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="Script Kindle.sql">DROP TABLE IF EXISTS genero;
CREATE TABLE genero(
	genero VARCHAR(50) NOT NULL PRIMARY KEY
);

DROP TABLE IF EXISTS pessoa;
CREATE TABLE pessoa(
	id_pessoa INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
	email VARCHAR(100) NOT NULL UNIQUE
);

DROP TABLE IF EXISTS pessoa_fisica;
CREATE TABLE pessoa_fisica(
	id_pessoa INTEGER NOT NULL,
	nome VARCHAR(30) NOT NULL,
	sobrenome VARCHAR(30) NOT NULL,
	cpf VARCHAR(11) NOT NULL UNIQUE,
	PRIMARY KEY (cpf),
	FOREIGN KEY (id_pessoa)
		REFERENCES pessoa (id_pessoa)
);

DROP TABLE IF EXISTS editora;
CREATE TABLE editora(
	id_pessoa INTEGER NOT NULL,
	razao_social VARCHAR(50) NOT NULL UNIQUE,
	cnpj VARCHAR(14) NOT NULL UNIQUE,
	PRIMARY KEY (cnpj),
	FOREIGN KEY (id_pessoa)
		REFERENCES pessoa (id_pessoa)
);

DROP TABLE IF EXISTS usuario;
CREATE TABLE usuario(
	id_pessoa INTEGER NOT NULL,
	login VARCHAR(30) NOT NULL UNIQUE,
	senha VARCHAR(30) NOT NULL,
	permissao CHAR NOT NULL,
	PRIMARY KEY (login)
	FOREIGN KEY (id_pessoa)
		REFERENCES pessoa_fisica (id_pessoa)
);

	DROP TABLE IF EXISTS escritor;
	CREATE TABLE escritor(
		id_pessoa INTEGER NOT NULL UNIQUE,
		id_escritor INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
		FOREIGN KEY (id_pessoa)
			REFERENCES pessoa_fisica (id_pessoa)
	);

DROP TABLE IF EXISTS livro;
CREATE TABLE livro(
	id_livro INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
	titulo VARCHAR(50) NOT NULL,
	n_paginas INTEGER,
	id_editora INTEGER NOT NULL,
	FOREIGN KEY (id_editora)
		REFERENCES editora (id_pessoa)
);

DROP TABLE IF EXISTS escritor_livro;
CREATE TABLE escritor_livro(
	id_escritor INTEGER NOT NULL,
	id_livro INTEGER NOT NULL,
	PRIMARY KEY (id_escritor, id_livro),
	FOREIGN KEY (id_escritor)
		REFERENCES escritor	(id_escritor),
	FOREIGN KEY (id_livro)
		REFERENCES livro (id_livro)
	
);

DROP TABLE IF EXISTS genero_livro;
CREATE TABLE genero_livro(
	genero_nome VARCHAR(50) NOT NULL,
	id_livro INTEGER NOT NULL,
	PRIMARY KEY (genero_nome, id_livro),
	FOREIGN KEY (genero_nome)
		REFERENCES genero (genero),
	FOREIGN KEY (id_livro)
		REFERENCES livro (id_livro)
);

DROP TABLE IF EXISTS usuario_livro;
CREATE TABLE usuario_livro(
	login_usuario VARCHAR(30) NOT NULL,
	id_livro INTEGER NOT NULL,
	PRIMARY KEY (login_usuario, id_livro),
	FOREIGN KEY (login_usuario)
		REFERENCES usuario (login),
	FOREIGN KEY (id_livro)
		REFERENCES livro (id_livro)
);</sql><sql name="SQL 2">SELECT pf.id_pessoa, id_escritor, nome, sobrenome, cpf, email 
FROM escritor AS es
INNER JOIN pessoa_fisica AS pf ON pf.id_pessoa = es.id_pessoa
INNER JOIN pessoa AS pe ON pe.id_pessoa = pf.id_pessoa;</sql><current_tab id="1"/></tab_sql></sqlb_project>
